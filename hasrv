#!/bin/ksh -p
# Author: FJO
# hasrv
# automatic fallback to alive server
#

PATH=/bin:/sbin:/usr/bin:/usr/sbin

function usage
{
    cat - <<-'EOF'
	usage: hasrv <host> <port> <backup1> <backup2> ...

	returns <host> if can connect to <host>:<port>
	if connection failed, returns first <backup> 
	that can be connected to <backup>:<port>

        if a host has multiple ip will return the name pointing
        to the reverse of ip that can connect

	can be used to switch to a backup server if 
	primary not available

	Example:
	  # server=$(hasrv myhost 22 mybackup1 mybackup2)
	  # ssh $server echo I can connect to this server on port 22

	EOF
    exit 1
}

function connect_ip_port
{
    typeset ip=$1 port=$2 timeout=$3
    timeout $timeout ksh -c "echo > /dev/tcp/$ip/$port" >/dev/null 
}

function try_connect
{
    typeset host=$1 port=$2 timeout=${3:-2} ips ip
    ips=$(host $host |awk '/has address/{print $NF}')
    [ ! "$ips" ] && echo "Warn: Cannot resolve host $host" >&2 && return 1
    if [ $(echo "$ips"|wc -l) = 1 ];then # unique ip
        connect_ip_port $ips $port $timeout && echo $host && return 0
    else # return the hostname from the reverse of ip if can connect
        for ip in $ips
        do
            if connect_ip_port $ip $port $timeout ; then
                host $ip |awk '/name pointer/{sub("[.]$","");print $NF;exit}'
                return 0
            fi
        done
    fi
    echo "Warn: Cannot connect to $host ($ip) on port $port" >&2
    return 1
}

function get_srv_up
{
    typeset host=$1 port=$2 backups=$3 backup=''
    try_connect $host $port 3 && return 0
    for backup in $backups
    do
        [ "$backup" = "$host" ] && continue
        backup=$(try_connect $backup $port) && break
    done
    [ ! "$backup" ] && echo "Error: Cannot connect to any backup for $host on port $port" >&2 && return 1
    echo "Warn: Fallback to backup host: $backup" >&2
    echo "$backup"
    return 0
}

# Parameters
[ $# -lt 2 ] && usage
HOST=$1
PORT=$2
shift 2
BACKUPS="$*"

get_srv_up $HOST $PORT "$BACKUPS"
